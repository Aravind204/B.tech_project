/*
Analog input, analog output, serial output
Reads an analog input pin, maps the result to a range from 0 to 255
and uses the result to set the pulsewidth modulation (PWM) of an output pin.
Also prints the results to the serial monitor.
The circuit:
* potentiometer connected to analog pin 0.
Center pin of the potentiometer goes to the analog pin.
side pins of the potentiometer go to +5V and ground
* LED connected from digital pin 9 to ground
created 29 Dec. 2008
modified 9 Apr 2012
by Tom Igoe
This example code is in the public domain.
*/
// These constants won't change. They're used to give names
// to the pins used:
#defineTempPin A0
#include<LiquidCrystal.h>
int TempValue;
const int buzzer=13;
LiquidCrystallcd(5,6,8,9,10,11);
const int analog1InPin = A1;
const int analog2InPin = A2;
//Analog input pin that the potentiometer is attached to
// Analog output pin that the LED is attached to
int sensorValue1 = 0;
int sensorValue2 = 0;// value read from the pot // value output to the PWM
(analog out)
float s1=0;
float s2=0,w;
int x;
int ot,ov,uv,oc;
void setup() {
// initialize serial communications at 9600 bps:
Serial.begin(9600);
pinMode(buzzer,OUTPUT);
lcd.begin(16,2);
}
void sendsms(int x)
{
Serial.print("AT\r");
delay(1000);
Serial.print("AT+CMGF=1\r");
delay(1000);
Serial.print("AT+CMGS=\"+917507545146\"\r"); //Phone number you want to
send the sms
delay(1000);
if(x==1)
{
Serial.print("OVER TEMPERATURE \r"); //Text message you want to send
delay(1000);
}
else if(x==2)
{
Serial.print("OVER VOLTAGE \r"); //Text message you want to send
delay(1000);
}
else if(x==3)
{
Serial.print("UNDER VOLTAGE \r"); //Text message you want to send
delay(1000);
}
else if(x==4)
{
Serial.print("OVER CURRENT \r"); //Text message you want to send
delay(1000);
}
Serial.write(0x1A); //sends ctrl+z end of message
delay(1000);
}
void loop() {
//Serial.print("TEMPRATURE in Celsius = "); //Displaying temperature in
Celsius
//Serial.print(TempCel);
//Serial.print("*C");
//Serial.print("current = ");
//Serial.println(s2);
while(1)
{
int T=0;
TempValue = analogRead(TempPin); // Getting LM35 value and saving it in
variable
float TempCel = ( TempValue/1024.0)*500; // Getting the celsius value from
10 bit analog value
lcd.setCursor(0,0);
lcd.print("T=");
lcd.print(TempCel);
sensorValue1 = analogRead(A1);
s1=sensorValue1/17.47572815;
s1=s1*54.36;
lcd.setCursor(9,0);
lcd.print("V=");
lcd.print(s1);
sensorValue2 = analogRead(A2);
s2=sensorValue2/51.75;
lcd.setCursor(0,1);
lcd.print("C=");
lcd.print(s2);
if(TempCel>=35.00)
{
if(ot==0)
{
sendsms(1);
ot=1;
}
lcd.setCursor(8,1);
lcd.print("OT");
T=1;
}
else
{
lcd.setCursor(8,1);
lcd.print("NT");
ot=0;
}
delay(1000);
// read the analog in value:
//Serial.print("sensor1 = ");
//Serial.println(sensorValue1);
//Serial.println("voltage = ");
Serial.println(s1) ;
if(s1>=250)
{
if(ov==0)
{
sendsms(2);
ov=1;
}
lcd.setCursor(11,1);
lcd.print("OV");
T=1;
}
else if(s1<=180)
{
if(uv==0)
{
sendsms(3);
uv=1;
}
lcd.setCursor(11,1);
lcd.print("UV");
T=1;
}
else
{
lcd.setCursor(11,1);
lcd.print("NV");
ov=0;
uv=0;
}
delay(1000);
//Serial.print("sensor2 = ");
//Serial.println(sensorValue2);
if(s2>=1)
{
if(oc==0)
{
sendsms(4);
oc=1;
}
lcd.setCursor(14,1);
lcd.print("OC");
T=1;
}
else
{
lcd.setCursor(14,1);
lcd.print("NC");
oc=0;
}
//w=s2*230;
//Serial.print("current = = ");
//Serial.println(w);
// wait 2 milliseconds before the next loop
// for the analog-to-digital converter to settle
// after the last reading:
if(T==1)
{
digitalWrite(buzzer,HIGH);
}
else
{
digitalWrite(buzzer,LOW);
}
}
}
